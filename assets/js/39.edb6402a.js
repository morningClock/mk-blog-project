(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{352:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"树形下拉选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树形下拉选择"}},[t._v("#")]),t._v(" 树形下拉选择")]),t._v(" "),a("h2",{attrs:{id:"组件封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件封装"}},[t._v("#")]),t._v(" 组件封装")]),t._v(" "),a("p",[t._v("Element里面没有树形收缩类型的下拉选择，只有级联风格的下拉框，不是我需要的，所以进行了组件的二次封装。")]),t._v(" "),a("p",[t._v("主要使用的是"),a("code",[t._v("<el-select>")]),t._v("、"),a("code",[t._v("<el-tree>")]),t._v("两个组件的组合，封装成"),a("code",[t._v("<select-tree>")]),t._v("组件")]),t._v(" "),a("h3",{attrs:{id:"封装思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装思路"}},[t._v("#")]),t._v(" 封装思路")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("<el-select>")]),t._v("、"),a("code",[t._v("<el-option>")]),t._v("包裹"),a("code",[t._v("<el-tree>")]),t._v("组件，向外暴露所需要用到的属性，比如value值，配置props属性（主要负责对象与树节点的映射关系），在选中Tree Node调用回调方法，将数据更新到v-model绑定的动态数据中。")]),t._v(" "),a("p",[t._v("组件配置")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("必要性")]),t._v(" "),a("th",[t._v("默认配置")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("v-model")]),t._v(" "),a("td",[t._v("双向绑定值")]),t._v(" "),a("td",[t._v("Value")]),t._v(" "),a("td",[t._v("required")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("props")]),t._v(" "),a("td",[t._v("对象与树映射关系")]),t._v(" "),a("td",[t._v("Object")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("见下表")])]),t._v(" "),a("tr",[a("td",[t._v("options")]),t._v(" "),a("td",[t._v("下拉选择的树形数组")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("required")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("accordion")]),t._v(" "),a("td",[t._v("是否只展示一个树节点里内容")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("placeholder")]),t._v(" "),a("td",[t._v("未选中时，展示的默认文本")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"props配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props配置"}},[t._v("#")]),t._v(" "),a("strong",[t._v("props配置")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("必要性")]),t._v(" "),a("th",[t._v("默认配置")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("valueName")]),t._v(" "),a("td",[t._v("select的值中以树对象中的哪个属性进行绑定")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("'value'")])]),t._v(" "),a("tr",[a("td",[t._v("label")]),t._v(" "),a("td",[t._v("select下拉框展示的文本")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("'label'")])]),t._v(" "),a("tr",[a("td",[t._v("children")]),t._v(" "),a("td",[t._v("tree对象中子节点属性名称")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("'children'")])])])]),t._v(" "),a("h3",{attrs:{id:"问题总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题总结"}},[t._v("#")]),t._v(" 问题总结")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("异步options传入，无法获取到状态，进行默认值的选中")]),t._v(" "),a("p",[t._v("解决：watch options选项，当options更新并有值时，进行默认数据的映射绑定。非异步的options在mounted阶段进行关系隐射。")])]),t._v(" "),a("li",[a("p",[t._v("自己的组件如何使用v-model进行双向绑定？")]),t._v(" "),a("p",[t._v("子组件可以使用"),a("code",[t._v("this.$attrs")]),t._v("查看当前组件所有bind的属性，可以通过"),a("code",[t._v("this.$listeners")]),t._v("查看当前组件所有v-on的属性。很多二次组件封装都会通过这两个属性进行透传至底层组件。此处我实现v-model双向绑定，也是利用这两个属性获取到v-model语法糖的实际绑定值是")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(" @input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update:value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意 :Vue3中，可以通过 "),a("a",{attrs:{href:"https://template-explorer.vuejs.org/#eyJzcmMiOiI8ZGl2IHYtbW9kZWw9XCJ2YWx1ZTFcIj5IZWxsbyBXb3JsZDwvZGl2PiIsIm9wdGlvbnMiOnsibW9kZSI6ImZ1bmN0aW9uIn19",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue3 Template Explorer"),a("OutboundLink")],1),t._v(" 进行编译模板后的代码查询")])])])]),t._v(" "),a("h3",{attrs:{id:"优化的思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化的思考"}},[t._v("#")]),t._v(" "),a("strong",[t._v("优化的思考")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("异步select数据有比较明显的闪动如何处理？")])]),t._v(" "),a("p",[t._v("1."),a("strong",[t._v("挂载时机的把控")]),t._v("，尽量要在数据请求完毕后，再进行组件的渲染，可以有效防止闪动。")]),t._v(" "),a("p",[t._v("2."),a("strong",[t._v("可以进行接口的缓存处理")]),t._v("，比如相同接口相同参数。也可以进行前端的请求拦截，每个请求都缓存数据，当有相同参数的请求时，调用缓存里面的数据。缺点：会导致请求接口无法更新实时数据，所以斟酌使用。")]),t._v(" "),a("p",[t._v("3."),a("strong",[t._v("协商缓存")]),t._v("， 可以利用http的缓存机制，进行协商缓存，加快http的响应速度。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("如果不处理，那么如何优化用户的体验呢？")])]),t._v(" "),a("p",[t._v("1.设置loading提醒用户正在加载，加载完毕后再显示，就不会出现明显的闪动，但是也会影响用户的体验。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Table和Form很多方法以及样式布局都重复了，是否可以抽离封装成组件")])]),t._v(" "),a("p",[t._v("可以进行二次封装，抽离公共方法，配置mixin，然后再加上配置，增加组件的灵活性，就可以满足整个系统的搭建，进行json式的配置，简化template的长度，更加优于管理。")])])]),t._v(" "),a("h2",{attrs:{id:"封装后的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装后的优化"}},[t._v("#")]),t._v(" 封装后的优化")]),t._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("ol",[a("li",[t._v("由于之前的组件封装场景十分单一，选中树是按照element的默认风格来进行封装的，导致有些功能不符合预期，比如点击树项时，获取树节点文本信息为选中目标，选择下拉图标时不选中。")]),t._v(" "),a("li",[t._v("异步加载时，非常频繁的进行options树的扁平化计算，导致渲染时抖动。")])]),t._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用Element Tree组件的"),a("code",[t._v("自定义节点")]),t._v("，进行自定义节点模板的编写。")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-tree")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":data")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("show-checkbox")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("node-key")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("default-expand-all")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":expand-on-click-node")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("custom-tree-node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("slot-scope")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ node, data }"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 自定义模板节点内容 --\x3e")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ node.label }}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("el-tree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("监听options的变化，比较options的值，如果不一样再进行扁平化计算。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 深度比较两个对象的内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newOptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldOptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recalculate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重算标志值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);
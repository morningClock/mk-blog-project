(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{349:function(e,t,s){"use strict";s.r(t);var v=s(13),a=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"主题色切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主题色切换"}},[e._v("#")]),e._v(" 主题色切换")]),e._v(" "),t("h2",{attrs:{id:"实现思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[e._v("#")]),e._v(" 实现思路")]),e._v(" "),t("blockquote",[t("p",[e._v("关键代码："),t("code",[e._v("/components/ThemePicker/index.vue")])]),e._v(" "),t("p",[e._v("vue-element-admin方案：")]),e._v(" "),t("p",[e._v("1.通过JS，获取拥有主题颜色配置的"),t("code",[e._v("<style>")]),e._v("样式表，获取innerText，使用正则匹配将主题色替换，再重新挂载触发重绘。")]),e._v(" "),t("p",[e._v("2.同样的方式，将"),t("code",[e._v("element-ui")]),e._v("主题颜色也做变换，获取"),t("code",[e._v("https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css")]),e._v("作为颜色替换模板，将其中所有对elementui预设的颜色进行替换。")])]),e._v(" "),t("h2",{attrs:{id:"其它方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它方案"}},[e._v("#")]),e._v(" 其它方案")]),e._v(" "),t("ol",[t("li",[e._v("使用css的变量进行主题色替换")]),e._v(" "),t("li",[e._v("使用less，通过引入less的编译器，在浏览器端动态的编译less文件，实现主题色的变换。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);